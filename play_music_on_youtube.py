import webbrowser
import time
import threading
import yt_dlp
from speak import speak
from listen import listen

def get_first_youtube_link(query):
    """рдпреВрдЯреНрдпреВрдм рд╕реЗ рдкрд╣рд▓рд╛ рд╡реАрдбрд┐рдпреЛ рд▓рд┐рдВрдХ рдирд┐рдХрд╛рд▓рдиреЗ рдХрд╛ рдлрдВрдХреНрд╢рди"""
    try:
        ydl_opts = {
            'quiet': True,
            'extract_flat': True,
            'force_generic_extractor': True,
        }

        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            search_url = f"ytsearch1:{query}"
            info = ydl.extract_info(search_url, download=False)

            if 'entries' in info and len(info['entries']) > 0:
                return info['entries'][0]['url']
            return None
    except Exception as e:
        print(f"ЁЯФ┤ YouTube Search Error: {e}")
        return None

def play():
    """рдереНрд░реЗрдб рдореЗрдВ рдореНрдпреВрдЬрд┐рдХ рдкреНрд▓реЗ рдХрд░реЗрдЧрд╛"""
    def run():
        speak("What music would you like to play, Bosse?")
        search_query = listen()
        if search_query:
            speak(f"Playing {search_query} on YouTube.")
            video_link = get_first_youtube_link(search_query)
            if video_link:
                webbrowser.open(video_link)
                speak("Enjoy Bosse!")
            else:
                speak("Sorry, I couldn't find the song on YouTube, Bosse.")
        else:
            speak("I didn't hear any song name, Bosse.")

    # рдЕрдм рдпрд╣ рдЕрд▓рдЧ рдереНрд░реЗрдб рдореЗрдВ рдЪрд▓реЗрдЧрд╛ рдФрд░ рдореЗрди рдкреНрд░реЛрдЧреНрд░рд╛рдо рдмреНрд▓реЙрдХ рдирд╣реАрдВ рд╣реЛрдЧрд╛
    music_thread = threading.Thread(target=run, daemon=True)
    music_thread.start()

# рдЕрдм рдЬрдм рдпреВрдЬрд░ "play music" рдмреЛрд▓реЗрдЧрд╛, рддрдм рд╣реА рдкреНрд▓реЗ рд╣реЛрдЧрд╛
def listen_for_music():
    """рдореНрдпреВрдЬрд┐рдХ рдХрдорд╛рдВрдб рд╕реБрдирдиреЗ рдХреЗ рд▓рд┐рдП рд▓реВрдк рдореЗрдВ рдЪрд▓рдиреЗ рд╡рд╛рд▓рд╛ рдлрдВрдХреНрд╢рди"""
    while True:
        command = listen()
        if any(phrase in command for phrase in ["music", "play music", "lucky play song"]):
            play()

# **рдЕрдм рдпрд╣ рд╣рдореЗрд╢рд╛ рд╕реБрдирддрд╛ рд░рд╣реЗрдЧрд╛ рдФрд░ рдореНрдпреВрдЬрд┐рдХ рдкреНрд▓реЗ рдХрд░реЗрдЧрд╛** ЁЯО╢
listen_for_music()
